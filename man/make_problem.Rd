% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cvxr_utils.R
\name{make_problem}
\alias{make_problem}
\title{Generate a convex programming problem equivalent to power optimization}
\usage{
make_problem(x, Aquad, opts, regL1 = 0, regFder = 0, ...)
}
\arguments{
\item{x}{a \code{\link[CVXR:Variable-class]{CVXR::Variable()}} representing the weight function for measurement times, see \code{\link[=make_variable]{make_variable()}}}

\item{Aquad}{a list of symmetric matrices generated by \link{make_quadmats}}

\item{opts$lattice_cstr}{must be equal to \code{'none'} for function to evaluate}

\item{opts$optim_method}{must be equal to \code{'cvxr'} for function to evaluate}
}
\value{
\code{prob} a disciplined convex programming problem \link[CVXR:Problem-class]{CVXR::Problem}
which can be solved using the \link{CVXR} library.
}
\description{
generates a disciplined convex programming problem equivalent to maximizing
the statistical power of a cosinor-based hypothesis test. The problem is created
as a \code{\link[CVXR:Problem-class]{CVXR::Problem()}} which can then be solved using \link{CVXR} together with the
\link{GUROBI} backend. The \link{GUROBI} backend is necessary because there are integer
constraints on the problem.
}
\author{
Turner Silverthorne
}
