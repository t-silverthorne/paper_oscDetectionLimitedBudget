% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solve_cvxr.R
\name{solve_cvxr}
\alias{solve_cvxr}
\title{Solve power optimization using CVXR}
\usage{
solve_cvxr(control)
}
\arguments{
\item{control$Nmeas}{number of measurements to be collected}

\item{control$Nfine}{number of points in fine grid from which measurement times are to be chosen}

\item{control$Nfreq}{number of points to use in frequency discretisation of objective}

\item{control$fmin}{minimum candidate frequency}

\item{control$fmax}{maximum candidate frequency}

\item{control$PreSolve}{recommended \code{PreSolve=2}, see \code{\link[CVXR:psolve]{CVXR::solve()}} for details}

\item{control$MIPFocus}{recommended \code{PreSolve=3}, see \code{\link[CVXR:psolve]{CVXR::solve()}} for details}

\item{control$cvxr_verbose}{boolean for how much output is desired from CVXR}

\item{control$num_iter}{max number of CVXR iterations}

\item{control$MIPGapAbs}{stopping criterion for CVXR solver}

\item{control$time_limit}{max time allowed for computation}
}
\value{
the result of calling \link[CVXR:psolve]{CVXR::solve} with specified user controls
}
\description{
Solve power optimization using CVXR
}
\note{
\code{time_limit} does not count the time taken to complete the pre-solve.

if iterations exceed \code{num_iter}, it is difficultto access output of the computation.
For this reason, we suggest setting \code{num_iter} to an unreasonably high
value and using \code{time_limit} instead to determine the cut-off time for computation.
}
\seealso{
\code{\link[=opt_osc_power]{opt_osc_power()}} which contains a similar wrapper for CVXR
}
\author{
Turner Silverthorne
}
